import{_ as n,c as i,a as t,o as a}from"./app-V-VRXAwm.js";const r="/learning-android/assets/overview-DlOVCdkh.png",o="/learning-android/assets/screens-p5CGXVR7.png",l={};function s(d,e){return a(),i("div",null,e[0]||(e[0]=[t('<h1 id="ðŸš€-let-s-start" tabindex="-1"><a class="header-anchor" href="#ðŸš€-let-s-start"><span>ðŸš€ Let&#39;s start</span></a></h1><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><ul><li>Basic knowledge of kotlin development (nullability,inline &amp; lambda functions mainly). For more information, please refer to the <a href="https://worldline.github.io/learning-kotlin/" target="_blank" rel="noopener noreferrer">Worldline kotlin training</a></li><li><a href="https://developer.android.com/studio" target="_blank" rel="noopener noreferrer">Android Studio IDE</a> with latest stable version <strong>Giraffe</strong> version or above</li><li>A good connectivity</li></ul><h2 id="hands-on-lab-objectives" tabindex="-1"><a class="header-anchor" href="#hands-on-lab-objectives"><span>Hands-on Lab objectives</span></a></h2><p><img src="'+r+'" alt="capture"></p><h3 id="functionnally" tabindex="-1"><a class="header-anchor" href="#functionnally"><span>Functionnally</span></a></h3><p>We will create a simple quiz application that provides :</p><ul><li>a Startup screen explaining rules of the game</li><li>a Quiz screen looping on single choices questions</li><li>a final scoring screen.</li></ul><h3 id="technically" tabindex="-1"><a class="header-anchor" href="#technically"><span>Technically</span></a></h3><ul><li>The app can be deployed on Android , iOS and jvm Desktop.</li><li>We will use not only a common library but composable views shared for all platforms</li></ul><h3 id="design-screens" tabindex="-1"><a class="header-anchor" href="#design-screens"><span>Design screens</span></a></h3><p>Here are expected screens at the end of this Hands-on Lab.</p><p><img src="'+o+'" alt="screens"></p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>You can generate composables based on designs on Figma thanks to the plugin <a href="https://www.figma.com/community/plugin/1041056822461507786/Relay-for-Figma" target="_blank" rel="noopener noreferrer">Google Relay</a>. A dedicated section on android developer documentation describe all the steps <a href="https://developer.android.com/jetpack/compose/tooling/relay?hl=fr" target="_blank" rel="noopener noreferrer">here</a></p></div><h1 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also"><span>See also</span></a></h1><ul><li><a href="https://github.com/gbrah/learning-android" target="_blank" rel="noopener noreferrer">Github repository for this training</a></li><li><a href="https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compatibility-and-versioning.html" target="_blank" rel="noopener noreferrer">Compose/Gradle compatibility guide </a></li><li><a href="https://developer.android.com/studio/releases?hl=fr#android_gradle_plugin_and_android_studio_compatibility" target="_blank" rel="noopener noreferrer">AGP/ Android studio compatibility guide </a></li><li><a href="https://www.figma.com/community/file/1164313362327941158/now-in-android-case-study" target="_blank" rel="noopener noreferrer">Figma Now in android</a></li><li><a href="https://kotlinlang.org/education/" target="_blank" rel="noopener noreferrer">Kotlin EDUCATION</a></li></ul>',16)]))}const p=n(l,[["render",s],["__file","index.html.vue"]]),h=JSON.parse(`{"path":"/overview/","title":"ðŸš€ Let's start","lang":"en-US","frontmatter":{"description":"ðŸš€ Let's start Prerequisites Basic knowledge of kotlin development (nullability,inline & lambda functions mainly). For more information, please refer to the Worldline kotlin tra...","head":[["meta",{"property":"og:url","content":"https://gbrah.github.io/learning-android/learning-android/overview/"}],["meta",{"property":"og:title","content":"ðŸš€ Let's start"}],["meta",{"property":"og:description","content":"ðŸš€ Let's start Prerequisites Basic knowledge of kotlin development (nullability,inline & lambda functions mainly). For more information, please refer to the Worldline kotlin tra..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-03T20:47:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-03T20:47:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ðŸš€ Let's start\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T20:47:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"Hands-on Lab objectives","slug":"hands-on-lab-objectives","link":"#hands-on-lab-objectives","children":[{"level":3,"title":"Functionnally","slug":"functionnally","link":"#functionnally","children":[]},{"level":3,"title":"Technically","slug":"technically","link":"#technically","children":[]},{"level":3,"title":"Design screens","slug":"design-screens","link":"#design-screens","children":[]}]}],"git":{"updatedTime":1712177232000,"contributors":[{"name":"Ibrahim Gharbi","email":"brah.gharbi@gmail.com","commits":1,"url":"https://github.com/Ibrahim Gharbi"}]},"filePathRelative":"overview/README.md","autoDesc":true}`);export{p as comp,h as data};
