import{_ as s,c as a,a as e,o as t}from"./app-V-VRXAwm.js";const p="/learning-android/assets/welcomescreen-Co59rGEZ.png",o="/learning-android/assets/scorescreen-CNitgOMe.png",l="/learning-android/assets/uml-CgIVGHo2.png",i="/learning-android/assets/quizscreen-DfuKJmyr.png",c={};function u(r,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="user-interface" tabindex="-1"><a class="header-anchor" href="#user-interface"><span>User interface</span></a></h1><h2 id="ðŸ“š-reminder" tabindex="-1"><a class="header-anchor" href="#ðŸ“š-reminder"><span>ðŸ“š Reminder</span></a></h2><h3 id="compose-multiplatform" tabindex="-1"><a class="header-anchor" href="#compose-multiplatform"><span><a href="https://www.jetbrains.com/lp/compose-mpp/" target="_blank" rel="noopener noreferrer">Compose Multiplatform</a></span></a></h3><p>Compose Multiplatform simplifies and accelerates UI development for Desktop and Web applications, and allows extensive UI code sharing between Android, iOS, Desktop and Web. It&#39;s a modern toolkit for building native UI. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs. It is based on <a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noopener noreferrer">Android Jetpack Compose</a> declarative UI approach ( which is similar also to <a href="https://developer.apple.com/xcode/swiftui/" target="_blank" rel="noopener noreferrer">SwiftUI</a> for iOS )</p><h3 id="how-to-create-composables" tabindex="-1"><a class="header-anchor" href="#how-to-create-composables"><span>How to create composables ?</span></a></h3><p>Composables are UI components that can be simply declared with code as functions, properties (such as text color, fonts...) as function parameters and subviews are declared on function declaration.</p><ul><li>An <code>@Composable</code> annotation come always before the composable function.</li><li>Properties of size, behaviors of components can be set thanks to <code>Modifiers</code></li><li>You can align components with containers composables such as <code>Column</code> (Vertically), <code>Box</code>, <code>Row</code> (Horizontally)</li><li>Also you can preview composables with the annotation <code>@Preview</code> before the composable annotation.</li></ul><p>Example: 2 texts vertically aligned that fit all the width of the screen.</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">internal</span> <span class="token keyword">fun</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    MaterialTheme <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span> <span class="token string-literal singleline"><span class="token string">&quot;My Text1&quot;</span></span><span class="token punctuation">,</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;My Text2&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>For more information, you can have a look to <a href="&#39;https://developer.android.com/jetpack/compose/layouts/material&#39;">Android Jetpack Compose documentation</a></p></div><h2 id="create-composable-for-the-quiz" tabindex="-1"><a class="header-anchor" href="#create-composable-for-the-quiz"><span>Create composable for the Quiz</span></a></h2><h3 id="ðŸ§ª-welcomescreen" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-welcomescreen"><span>ðŸ§ª WelcomeScreen</span></a></h3><p><img src="`+p+`" alt="Welcome Screen preview"></p><p>You can now create your first view. For the Quiz we need a welcome screen displaying a Card centered with a button inside to start the quiz It is simply compose of the following composables :</p><ul><li><p>a Card rounded shape container</p></li><li><p>a Text</p></li><li><p>a Button</p></li><li><p>Create a new composable <code>WelcomeScreen.kt</code> on commonMain module</p></li><li><p>Make sure that the App() composable is using it has below</p></li></ul><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">enableEdgeToEdge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        setContent <span class="token punctuation">{</span></span>
<span class="line">            QuizAppAndroidTheme <span class="token punctuation">{</span></span>
<span class="line">                  <span class="token function">WelcomeScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Run you first view on all platforms , it should work.</li></ul><h3 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h3><details class="hint-container details"><summary>WelcomeScreen.kt (SourseSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token annotation builtin">@Composable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">internal</span> <span class="token keyword">fun</span> <span class="token function">WelcomeScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">        contentAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Card</span><span class="token punctuation">(</span></span>
<span class="line">            shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">                    <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                            text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Quiz&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                            fontSize <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">)</span></span>
<span class="line">                        <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                            text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;A simple Quiz to discovers KMP and compose.&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token punctuation">)</span></span>
<span class="line">                        <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">                            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                            onClick <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Start the Quiz&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="ðŸ§ª-scorescreen" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-scorescreen"><span>ðŸ§ª ScoreScreen</span></a></h3><p><img src="`+o+`" alt="Score Screen preview"></p><p>The second view will be quite similar but able de show final scores</p><ul><li>Create a new composable <code>ScoreScreen.kt</code> on commonMain module</li><li>Make sure that the App() composable is using it has below</li><li>The composable will have a <code>String</code> value as parameter</li></ul><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">enableEdgeToEdge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        setContent <span class="token punctuation">{</span></span>
<span class="line">            QuizAppAndroidTheme <span class="token punctuation">{</span></span>
<span class="line">                  <span class="token function">ScoreScreen</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;10/20&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Run you first view on all platforms , it should work.</li></ul><h3 id="ðŸŽ¯-solutions-1" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions-1"><span>ðŸŽ¯ Solutions</span></a></h3><details class="hint-container details"><summary>ScoreScreen.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token annotation builtin">@Composable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">internal</span> <span class="token keyword">fun</span> <span class="token function">ScoreScreen</span><span class="token punctuation">(</span>score<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Box</span><span class="token punctuation">(</span></span>
<span class="line">        contentAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Card</span><span class="token punctuation">(</span></span>
<span class="line">            shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            backgroundColor <span class="token operator">=</span> Color<span class="token punctuation">.</span>Green</span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">                    <span class="token function">Column</span><span class="token punctuation">(</span>horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">                        <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                            fontSize <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                            text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;score&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token punctuation">)</span></span>
<span class="line">                        <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                            fontSize <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                            text <span class="token operator">=</span> score<span class="token punctuation">,</span></span>
<span class="line">                        <span class="token punctuation">)</span></span>
<span class="line">                        <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">                            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                            onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                            <span class="token punctuation">}</span></span>
<span class="line">                        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                            <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>Filled<span class="token punctuation">.</span>Refresh<span class="token punctuation">,</span> contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Localized description&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                            <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Retake the Quiz&quot;</span></span><span class="token punctuation">,</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="ðŸ§ª-questionscreen" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-questionscreen"><span>ðŸ§ª QuestionScreen</span></a></h3><h4 id="data-classes-for-quiz-modeling" tabindex="-1"><a class="header-anchor" href="#data-classes-for-quiz-modeling"><span>Data classes for Quiz modeling</span></a></h4><p><img src="`+l+`" alt="class_diagram"></p><p>We can create classes on the package <code>network.data</code></p><details class="hint-container details"><summary>Answer.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span> String <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Question.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Question</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span>String<span class="token punctuation">,</span> <span class="token keyword">val</span> correctAnswerId<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> answers<span class="token operator">:</span>List<span class="token operator">&lt;</span>Answer<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Quiz.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Quiz</span><span class="token punctuation">(</span><span class="token keyword">var</span> questions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h4 id="make-the-composable" tabindex="-1"><a class="header-anchor" href="#make-the-composable"><span>Make the composable</span></a></h4><p>Now we can make a composable with interactions.</p><p><img src="`+i+`" alt="class_diagram"></p><p>The screen is composed of :</p><ul><li>The question label in a <code>Card</code></li><li>Single choice answer component with <code>RadioButton</code></li><li>A <code>Button</code> to submit the answer</li><li>A <code>LinearProgressIndicator</code> indicating the quiz progress</li></ul><p>After creating the UI view, we can pass to this composable the list of questions. When the <code>App</code>composable will create <code>questionScreen()</code> composable we will generate mock questions data for now to generate the list of questions.</p><h5 id="state-management" tabindex="-1"><a class="header-anchor" href="#state-management"><span>State management</span></a></h5><p>All views of question will be one unique composable that updates with the correct question/answers data each time we are clicking on the <code>next</code> button.</p><p>We use <code>MutableState</code> value for that. It permit to keep data value and recompose the view when the data is changed. It&#39;s exactly what we need for our quiz page :</p><ul><li>Keep the value of the question position on the list</li><li>Keep the value of the answer selected by the user each time he switch between RadioButtons</li><li>Keep the score to get the final one at the end of the list.</li></ul><p>Here is an example of <code>MutableState</code> value declaration</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">    <span class="token keyword">var</span> questionProgress <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>You can declare the 2 other MutableState values and after use it on your composable ensuring that on the button click <code>questionProgress</code>is incrementing so the question and his answers can change on the view.</p><h3 id="ðŸŽ¯-solutions-2" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions-2"><span>ðŸŽ¯ Solutions</span></a></h3><details class="hint-container details"><summary>QuestionScreen.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">internal</span> <span class="token keyword">fun</span> <span class="token function">QuestionScreen</span><span class="token punctuation">(</span>questions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> questionProgress <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">var</span> selectedAnswer <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">var</span> score <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Column</span><span class="token punctuation">(</span></span>
<span class="line">        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        verticalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>Center<span class="token punctuation">,</span></span>
<span class="line">        horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">Card</span><span class="token punctuation">(</span></span>
<span class="line">            shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Column</span><span class="token punctuation">(</span></span>
<span class="line">                horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">,</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">Text</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    text <span class="token operator">=</span> questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>label<span class="token punctuation">,</span></span>
<span class="line">                    fontSize <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">.</span>sp<span class="token punctuation">,</span></span>
<span class="line">                    textAlign <span class="token operator">=</span> TextAlign<span class="token punctuation">.</span>Center</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">selectableGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>answers<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> answer <span class="token operator">-&gt;</span></span>
<span class="line">                <span class="token function">Row</span><span class="token punctuation">(</span></span>
<span class="line">                    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>horizontal <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    verticalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterVertically</span>
<span class="line">                <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">RadioButton</span><span class="token punctuation">(</span></span>
<span class="line">                        modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>end <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        selected <span class="token operator">=</span> <span class="token punctuation">(</span>selectedAnswer <span class="token operator">==</span> answer<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                        onClick <span class="token operator">=</span> <span class="token punctuation">{</span> selectedAnswer <span class="token operator">=</span> answer<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> answer<span class="token punctuation">.</span>label<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> horizontalAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>CenterHorizontally<span class="token punctuation">,</span> verticalArrangement <span class="token operator">=</span> Arrangement<span class="token punctuation">.</span>Bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>bottom <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">if</span><span class="token punctuation">(</span>selectedAnswer <span class="token operator">==</span> questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>correctAnswerId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        score<span class="token operator">++</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>questionProgress <span class="token operator">&lt;</span> questions<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        questionProgress<span class="token operator">++</span></span>
<span class="line">                        selectedAnswer <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">                        <span class="token comment">// Go to the score section</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span>questionProgress <span class="token operator">&lt;</span> questions<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">nextOrDoneButton</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>Filled<span class="token punctuation">.</span>ArrowForward<span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;Next&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">else</span> <span class="token function">nextOrDoneButton</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>Filled<span class="token punctuation">.</span>Done<span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;Done&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token function">LinearProgressIndicator</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span> progress <span class="token operator">=</span> questionProgress<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span>questions<span class="token punctuation">.</span>size<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span>questions<span class="token punctuation">.</span>size<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"><span class="token keyword">internal</span> <span class="token keyword">fun</span> <span class="token function">nextOrDoneButton</span><span class="token punctuation">(</span>iv<span class="token operator">:</span> ImageVector<span class="token punctuation">,</span> label<span class="token operator">:</span>String<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Icon</span><span class="token punctuation">(</span></span>
<span class="line">        iv<span class="token punctuation">,</span></span>
<span class="line">        contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Localized description&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>end <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>MainActivity.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">enableEdgeToEdge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        setContent <span class="token punctuation">{</span></span>
<span class="line">            QuizAppAndroidTheme <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">var</span> questions <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                        <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token string-literal singleline"><span class="token string">&quot;Android is a great platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                        <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token string-literal singleline"><span class="token string">&quot;Android is a bad platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                        <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">QuestionScreen</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>Your Quiz have now all his composable screens made. Let&#39;s connect it to the Internet</p><p><strong>âœ… If everything is fine, go to the next chapter â†’</strong></p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>The full solution for this section is availabe <a href="#">here</a></p></div><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2><ul><li><a href="https://www.jetpackcompose.app/snippets" target="_blank" rel="noopener noreferrer">Composables snippets</a></li><li><a href="https://www.composables.com/" target="_blank" rel="noopener noreferrer">Composables widget database</a></li><li><a href="https://www.jetpackcompose.app/compare-declarative-frameworks/JetpackCompose-vs-SwiftUI-vs-Flutter" target="_blank" rel="noopener noreferrer">Compare declarative UI</a></li><li><a href="https://developer.android.com/jetpack/compose/components" target="_blank" rel="noopener noreferrer">Jetpack compose composables</a></li></ul>`,55)]))}const k=s(c,[["render",u],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/ui/","title":"User interface","lang":"en-US","frontmatter":{"description":"User interface ðŸ“š Reminder Compose Multiplatform Compose Multiplatform simplifies and accelerates UI development for Desktop and Web applications, and allows extensive UI code s...","head":[["meta",{"property":"og:url","content":"https://gbrah.github.io/learning-android/learning-android/ui/"}],["meta",{"property":"og:title","content":"User interface"}],["meta",{"property":"og:description","content":"User interface ðŸ“š Reminder Compose Multiplatform Compose Multiplatform simplifies and accelerates UI development for Desktop and Web applications, and allows extensive UI code s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-03T20:47:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-03T20:47:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"User interface\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T20:47:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"ðŸ“š Reminder","slug":"ðŸ“š-reminder","link":"#ðŸ“š-reminder","children":[{"level":3,"title":"Compose Multiplatform","slug":"compose-multiplatform","link":"#compose-multiplatform","children":[]},{"level":3,"title":"How to create composables ?","slug":"how-to-create-composables","link":"#how-to-create-composables","children":[]}]},{"level":2,"title":"Create composable for the Quiz","slug":"create-composable-for-the-quiz","link":"#create-composable-for-the-quiz","children":[{"level":3,"title":"ðŸ§ª WelcomeScreen","slug":"ðŸ§ª-welcomescreen","link":"#ðŸ§ª-welcomescreen","children":[]},{"level":3,"title":"ðŸŽ¯ Solutions","slug":"ðŸŽ¯-solutions","link":"#ðŸŽ¯-solutions","children":[]},{"level":3,"title":"ðŸ§ª ScoreScreen","slug":"ðŸ§ª-scorescreen","link":"#ðŸ§ª-scorescreen","children":[]},{"level":3,"title":"ðŸŽ¯ Solutions","slug":"ðŸŽ¯-solutions-1","link":"#ðŸŽ¯-solutions-1","children":[]},{"level":3,"title":"ðŸ§ª QuestionScreen","slug":"ðŸ§ª-questionscreen","link":"#ðŸ§ª-questionscreen","children":[]},{"level":3,"title":"ðŸŽ¯ Solutions","slug":"ðŸŽ¯-solutions-2","link":"#ðŸŽ¯-solutions-2","children":[]}]},{"level":2,"title":"ðŸ“– Further reading","slug":"ðŸ“–-further-reading","link":"#ðŸ“–-further-reading","children":[]}],"git":{"updatedTime":1712177232000,"contributors":[{"name":"Ibrahim Gharbi","email":"brah.gharbi@gmail.com","commits":1,"url":"https://github.com/Ibrahim Gharbi"}]},"filePathRelative":"ui/README.md","autoDesc":true}');export{k as comp,m as data};
