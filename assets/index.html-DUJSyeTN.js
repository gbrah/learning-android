import{_ as s,c as a,a as e,o as p}from"./app-V-VRXAwm.js";const t="/learning-android/assets/diagramme_sql-r2fvGaiz.png",i={};function l(o,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="local-database" tabindex="-1"><a class="header-anchor" href="#local-database"><span>Local Database</span></a></h1><p>SQLDelight generates typesafe Kotlin APIs from your SQL statements. It verifies your schema, statements, and migrations at compile-time and provides IDE features like autocomplete and refactoring which make writing and maintaining SQL simple.</p><p>SQLDelight understands your existing SQL schema.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> hockey_player <span class="token punctuation">(</span></span>
<span class="line">  id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> AUTOINCREMENT<span class="token punctuation">,</span></span>
<span class="line">  name <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  number <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It generates typesafe code for any labeled SQL statements.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Be carefull with SQL Delight , the project and his dependancies just move from <code>com.squareup.sqldelight.*</code> to <code>app.cash.sqldelight.*</code></p><p>Pay attention also with beta, alpha version of Android studio that could produce bugs on gradle task management for code generation of SQL Delight databases.</p></div><h2 id="ðŸ§ª-add-sqldelight-db-to-your-quizz" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-add-sqldelight-db-to-your-quizz"><span>ðŸ§ª Add sqldelight db to your quizz</span></a></h2><blockquote><p>Refer to the multiplatform implementation of SQLDelight in official Github pages ðŸ‘‰ <a href="https://cashapp.github.io/sqldelight/2.0.0/android_sqlite/" target="_blank" rel="noopener noreferrer">https://cashapp.github.io/sqldelight/2.0.0/android_sqlite/</a></p></blockquote><h4 id="add-the-correct-dependancies-to-the-project" tabindex="-1"><a class="header-anchor" href="#add-the-correct-dependancies-to-the-project"><span>Add the correct dependancies to the project</span></a></h4><p><em>libs.versions.toml</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">sqldelight <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;2.0.1&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>libraries<span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">sqldelight <span class="token operator">=</span> <span class="token punctuation">{</span> group <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;app.cash.sqldelight&quot;</span></span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;runtime&quot;</span></span><span class="token punctuation">,</span> version<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;sqldelight&quot;</span></span><span class="token punctuation">}</span></span>
<span class="line">sqldelight<span class="token operator">-</span>android<span class="token operator">-</span>driver <span class="token operator">=</span> <span class="token punctuation">{</span> group <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;app.cash.sqldelight&quot;</span></span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;android-driver&quot;</span></span><span class="token punctuation">,</span> version<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;sqldelight&quot;</span></span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>plugins<span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">sqldelight <span class="token operator">=</span> <span class="token punctuation">{</span> id <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;app.cash.sqldelight&quot;</span></span><span class="token punctuation">,</span> version<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;sqldelight&quot;</span></span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>build.gradle.kts (App)</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>sqldelight<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>sqldelight<span class="token punctuation">.</span>android<span class="token punctuation">.</span>driver<span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="read-carefully-the-modelisation-uml-below" tabindex="-1"><a class="header-anchor" href="#read-carefully-the-modelisation-uml-below"><span>Read carefully the modelisation UML below</span></a></h4><p><img src="`+t+`" alt="diagram SQL "></p><h4 id="create-you-sqldelight-model-quizdatabase-sq" tabindex="-1"><a class="header-anchor" href="#create-you-sqldelight-model-quizdatabase-sq"><span>Create you SQLDelight model &#39;QuizDatabase.sq&#39;</span></a></h4><h4 id="create-your-database-datasource-by-generating-insert-and-update-suspending-functions" tabindex="-1"><a class="header-anchor" href="#create-your-database-datasource-by-generating-insert-and-update-suspending-functions"><span>Create your Database datasource by generating insert and update suspending functions</span></a></h4><h4 id="update-your-repository-by-instanciating-your-database" tabindex="-1"><a class="header-anchor" href="#update-your-repository-by-instanciating-your-database"><span>Update your repository by instanciating your database</span></a></h4><p>Your repository handle the following cases :</p><ul><li>If there is no network and it&#39;s the first time launch of the app : handle and error</li><li>if there is no network and you have db datas : return on the flow the db data</li><li>if there is network and db data are younger than 5 min : return on the flow the db data</li><li>if there is network and db data are older than 5 min : retourn on the flow the network data and reset db data</li></ul><h2 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h2><details class="hint-container details"><summary>QuizDatabase.sq *</summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> update_time <span class="token punctuation">(</span></span>
<span class="line">     timestamprequest <span class="token keyword">INTEGER</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> update_time<span class="token punctuation">(</span>timestamprequest<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> questions <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    label <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    correctAnswerId <span class="token keyword">INTEGER</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span></span>
<span class="line"> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> answers <span class="token punctuation">(</span></span>
<span class="line">    id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    label <span class="token keyword">TEXT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    question_id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> question_id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>question_id<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">REFERENCES</span> questions <span class="token punctuation">(</span>id<span class="token punctuation">)</span></span>
<span class="line">          <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CASCADE</span></span>
<span class="line">          <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span></span>
<span class="line"> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"> selectUpdateTimestamp:</span>
<span class="line"> <span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"> <span class="token keyword">FROM</span> update_time<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"> insertTimeStamp:</span>
<span class="line"> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> update_time<span class="token punctuation">(</span>timestamprequest<span class="token punctuation">)</span></span>
<span class="line"> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>:<span class="token keyword">timestamp</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"> deleteTimeStamp:</span>
<span class="line"> <span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> update_time<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"> deleteQuestions:</span>
<span class="line"> <span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> questions<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"> deleteAnswers:</span>
<span class="line"> <span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> answers<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"> selectAllQuestionsWithAnswers:</span>
<span class="line"> <span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"> <span class="token keyword">FROM</span> questions</span>
<span class="line"> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> answers <span class="token keyword">ON</span> questions<span class="token punctuation">.</span>id <span class="token operator">=</span> answers<span class="token punctuation">.</span>question_id<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"> insertQuestion:</span>
<span class="line"> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> questions<span class="token punctuation">(</span>id<span class="token punctuation">,</span> label<span class="token punctuation">,</span>correctAnswerId<span class="token punctuation">)</span></span>
<span class="line"> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"> insertAnswer:</span>
<span class="line"> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> answers<span class="token punctuation">(</span>id<span class="token punctuation">,</span> label<span class="token punctuation">,</span>question_id<span class="token punctuation">)</span></span>
<span class="line"> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>network/QuizDbDataSource.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>quizappandroid<span class="token punctuation">.</span>network</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span>db<span class="token punctuation">.</span>SupportSQLiteDatabase</span>
<span class="line"><span class="token keyword">import</span> app<span class="token punctuation">.</span>cash<span class="token punctuation">.</span>sqldelight<span class="token punctuation">.</span>driver<span class="token punctuation">.</span>android<span class="token punctuation">.</span>AndroidSqliteDriver</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>quizappandroid<span class="token punctuation">.</span>network<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Answer</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>quizappandroid<span class="token punctuation">.</span>network<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Question</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>myapplication<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>Database</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>CoroutineScope</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token function">QuizDbDataSource</span><span class="token punctuation">(</span>context<span class="token operator">:</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span>  <span class="token keyword">var</span> sqlDriver <span class="token operator">=</span> <span class="token function">AndroidSqliteDriver</span><span class="token punctuation">(</span></span>
<span class="line">        schema <span class="token operator">=</span> Database<span class="token punctuation">.</span>Schema<span class="token punctuation">,</span></span>
<span class="line">        context <span class="token operator">=</span> context<span class="token punctuation">,</span></span>
<span class="line">        name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;quiz.db&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        callback <span class="token operator">=</span> <span class="token keyword">object</span> <span class="token operator">:</span> AndroidSqliteDriver<span class="token punctuation">.</span><span class="token function">Callback</span><span class="token punctuation">(</span>Database<span class="token punctuation">.</span>Schema<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onOpen</span><span class="token punctuation">(</span>db<span class="token operator">:</span> SupportSQLiteDatabase<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                db<span class="token punctuation">.</span><span class="token function">setForeignKeyConstraintsEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span>  <span class="token keyword">var</span> database<span class="token operator">=</span> <span class="token function">Database</span><span class="token punctuation">(</span>sqlDriver<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span>  <span class="token keyword">var</span> quizQueries<span class="token operator">=</span>database<span class="token punctuation">.</span>quizDatabaseQueries</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">getUpdateTimeStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>Long <span class="token operator">=</span> quizQueries<span class="token punctuation">.</span><span class="token function">selectUpdateTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeAsOneOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>timestamprequest <span class="token operator">?:</span> <span class="token number">0L</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">setUpdateTimeStamp</span><span class="token punctuation">(</span>timeStamp<span class="token operator">:</span>Long<span class="token punctuation">)</span>  <span class="token punctuation">{</span></span>
<span class="line">        quizQueries<span class="token punctuation">.</span><span class="token function">deleteTimeStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        quizQueries<span class="token punctuation">.</span><span class="token function">insertTimeStamp</span><span class="token punctuation">(</span>timeStamp<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">getAllQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> quizQueries<span class="token punctuation">.</span><span class="token function">selectAllQuestionsWithAnswers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">groupBy</span> <span class="token punctuation">{</span>it<span class="token punctuation">.</span>question_id <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>questionId<span class="token punctuation">,</span> rowList<span class="token punctuation">)</span> <span class="token operator">-&gt;</span></span>
<span class="line"></span>
<span class="line">                <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                    id <span class="token operator">=</span> questionId<span class="token punctuation">,</span></span>
<span class="line">                    label <span class="token operator">=</span> rowList<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">,</span></span>
<span class="line">                    correctAnswerId <span class="token operator">=</span> rowList<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>correctAnswerId<span class="token punctuation">,</span></span>
<span class="line">                    answers <span class="token operator">=</span> rowList<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> answer <span class="token operator">-&gt;</span></span>
<span class="line">                        <span class="token function">Answer</span><span class="token punctuation">(</span></span>
<span class="line">                            id <span class="token operator">=</span> answer<span class="token punctuation">.</span>id_<span class="token punctuation">,</span></span>
<span class="line">                            label <span class="token operator">=</span> answer<span class="token punctuation">.</span>label_</span>
<span class="line">                        <span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">insertQuestions</span><span class="token punctuation">(</span>questions<span class="token operator">:</span>List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        quizQueries<span class="token punctuation">.</span><span class="token function">deleteQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        quizQueries<span class="token punctuation">.</span><span class="token function">deleteAnswers</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        questions<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span>question <span class="token operator">-&gt;</span></span>
<span class="line">            quizQueries<span class="token punctuation">.</span><span class="token function">insertQuestion</span><span class="token punctuation">(</span>question<span class="token punctuation">.</span>id<span class="token punctuation">,</span> question<span class="token punctuation">.</span>label<span class="token punctuation">,</span> question<span class="token punctuation">.</span>correctAnswerId<span class="token punctuation">)</span></span>
<span class="line">            question<span class="token punctuation">.</span>answers<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span>answer <span class="token operator">-&gt;</span></span>
<span class="line">                quizQueries<span class="token punctuation">.</span><span class="token function">insertAnswer</span><span class="token punctuation">(</span>answer<span class="token punctuation">.</span>id<span class="token punctuation">,</span>answer<span class="token punctuation">.</span>label<span class="token punctuation">,</span>question<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>QuizRepository.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">package</span> network</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>quizappandroid<span class="token punctuation">.</span>network<span class="token punctuation">.</span>MockDataSource</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>quizappandroid<span class="token punctuation">.</span>network<span class="token punctuation">.</span>QuizApiDatasource</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>quizappandroid<span class="token punctuation">.</span>network<span class="token punctuation">.</span>QuizDbDataSource</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>CoroutineScope</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>Dispatchers</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>flow<span class="token punctuation">.</span>MutableStateFlow</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>flow<span class="token punctuation">.</span>update</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>launch</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>quizappandroid<span class="token punctuation">.</span>network<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Question</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span>context<span class="token operator">:</span>Context<span class="token punctuation">)</span>  <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> mockDataSource <span class="token operator">=</span> <span class="token function">MockDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> quizAPI <span class="token operator">=</span> <span class="token function">QuizApiDatasource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> coroutineScope <span class="token operator">=</span> <span class="token function">CoroutineScope</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>Main<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> quizDB <span class="token operator">=</span> <span class="token function">QuizDbDataSource</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> _questionState<span class="token operator">=</span>  <span class="token function">MutableStateFlow</span><span class="token punctuation">(</span>listOf<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> questionState <span class="token operator">=</span> _questionState</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">fetchQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span> <span class="token operator">=</span> quizAPI<span class="token punctuation">.</span><span class="token function">getAllQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>questions</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">fetchAndStoreQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> questions  <span class="token operator">=</span> <span class="token function">fetchQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        quizDB<span class="token punctuation">.</span><span class="token function">insertQuestions</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span></span>
<span class="line">        quizDB<span class="token punctuation">.</span><span class="token function">setUpdateTimeStamp</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> questions</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        coroutineScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">            _questionState<span class="token punctuation">.</span><span class="token function">update</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">val</span> lastRequest <span class="token operator">=</span> quizDB<span class="token punctuation">.</span><span class="token function">getUpdateTimeStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token keyword">if</span><span class="token punctuation">(</span>lastRequest <span class="token operator">==</span> <span class="token number">0L</span> <span class="token operator">||</span> lastRequest <span class="token operator">-</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000</span> <span class="token operator">&gt;</span> <span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                        <span class="token function">fetchAndStoreQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">                        quizDB<span class="token punctuation">.</span><span class="token function">getAllQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> NullPointerException<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">fetchAndStoreQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Exception<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    mockDataSource<span class="token punctuation">.</span><span class="token function">generateDummyQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>if you want to store simple key-value data, you can use <a href="&#39;https://developer.android.com/reference/kotlin/androidx/datastore/package-summary.html&#39;"><code>DataStore</code></a></p><p>For not using SQLight ORM, you can use <a href="https://github.com/realm/realm-kotlin" target="_blank" rel="noopener noreferrer"><code>Realm kotlin</code></a></p></div><p><strong>âœ… If everything is fine, go to the next chapter â†’</strong></p><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2><ul><li><a href="https://github.com/cashapp/sqldelight" target="_blank" rel="noopener noreferrer">SQL Delight lib </a></li></ul>`,28)]))}const u=s(i,[["render",l],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/database/","title":"Local  Database","lang":"en-US","frontmatter":{"description":"Local Database SQLDelight generates typesafe Kotlin APIs from your SQL statements. It verifies your schema, statements, and migrations at compile-time and provides IDE features ...","head":[["meta",{"property":"og:url","content":"https://gbrah.github.io/learning-android/learning-android/database/"}],["meta",{"property":"og:title","content":"Local  Database"}],["meta",{"property":"og:description","content":"Local Database SQLDelight generates typesafe Kotlin APIs from your SQL statements. It verifies your schema, statements, and migrations at compile-time and provides IDE features ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-03T20:47:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-03T20:47:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Local  Database\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T20:47:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"ðŸ§ª Add sqldelight db to your quizz","slug":"ðŸ§ª-add-sqldelight-db-to-your-quizz","link":"#ðŸ§ª-add-sqldelight-db-to-your-quizz","children":[]},{"level":2,"title":"ðŸŽ¯ Solutions","slug":"ðŸŽ¯-solutions","link":"#ðŸŽ¯-solutions","children":[]},{"level":2,"title":"ðŸ“– Further reading","slug":"ðŸ“–-further-reading","link":"#ðŸ“–-further-reading","children":[]}],"git":{"updatedTime":1712177232000,"contributors":[{"name":"Ibrahim Gharbi","email":"brah.gharbi@gmail.com","commits":1,"url":"https://github.com/Ibrahim Gharbi"}]},"filePathRelative":"database/README.md","autoDesc":true}');export{u as comp,r as data};
