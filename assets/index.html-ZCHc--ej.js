import{_ as a,c as t,b as n,a as e,o as p}from"./app-V-VRXAwm.js";const i="/learning-android/assets/data_layer-v60ERUlw.png",l="/learning-android/assets/arch_ui_udf-e0ydxGC2.png",o={};function c(r,s){return p(),t("div",null,s[0]||(s[0]=[n("h1",{id:"connectivity",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#connectivity"},[n("span",null,"Connectivity")])],-1),n("p",null,"Let's connect our Quiz app to internet.",-1),n("h2",{id:"ðŸ“š-architecture",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ðŸ“š-architecture"},[n("span",null,"ðŸ“š Architecture")])],-1),n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"Architecture basics"),n("p",null,[n("strong",null,"Everything You NEED to Know About Client Architecture Patterns")]),n("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/I5c7fBgvkNY",title:"Everything You NEED to Know About Client Architecture Patterns",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""})],-1),e('<h3 id="data-layer-for-android" tabindex="-1"><a class="header-anchor" href="#data-layer-for-android"><span>Data layer for Android</span></a></h3><p>Data layer is provided by <a href="https://developer.android.com/topic/architecture/data-layer" target="_blank" rel="noopener noreferrer">Android Architecture pattern</a></p><p><img src="'+i+'" alt="data layer overview"></p><p>Repository classes are responsible for the following tasks:</p><ul><li>Exposing data to the rest of the app.</li><li>Centralizing changes to the data.</li><li>Resolving conflicts between multiple data sources.</li><li>Abstracting sources of data from the rest of the app.</li><li>Containing business logic.</li></ul><h3 id="kotlin-flow" tabindex="-1"><a class="header-anchor" href="#kotlin-flow"><span><a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/" target="_blank" rel="noopener noreferrer">Kotlin flow</a></span></a></h3><p>&quot;A flow is an asynchronous data stream that sequentially emits values and completes normally or with an exception.&quot;</p><p>There are multiple types of flow, for the Hands-on Lab, we will focus on <a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-state-flow/" target="_blank" rel="noopener noreferrer"><code>StateFlow</code></a></p><p>A state flow is a hot flow because its active instance exists independently of the presence of collectors (our composables that consume the data)</p><h3 id="coroutine" tabindex="-1"><a class="header-anchor" href="#coroutine"><span><a href="https://kotlinlang.org/docs/coroutines-basics.html#your-first-coroutine" target="_blank" rel="noopener noreferrer">Coroutine</a></span></a></h3><p>&quot;A coroutine is an instance of suspendable computation. It is conceptually similar to a thread, in the sense that it takes a block of code to run that works concurrently with the rest of the code. However, a coroutine is not bound to any particular thread. It may suspend its execution in one thread and resume in another one.&quot;</p><h3 id="ðŸ§ª-create-your-first-datasource-and-repository" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-create-your-first-datasource-and-repository"><span>ðŸ§ª Create your first DataSource and Repository</span></a></h3><ul><li>Create a mock datasource, that generate a list of question</li><li>Use it with a repository on your QuizScreen</li></ul><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>We will skip for now the UI state holder layer such as [<code>ViewModels</code>] to make a simple architecture</p><details class="hint-container details"><summary>architecture</summary><p><img src="'+l+`" alt="state holder arch"></p></details></div><h3 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h3><details class="hint-container details"><summary>MockDataSource.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">package</span> network</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> network<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Answer</span>
<span class="line"><span class="token keyword">import</span> network<span class="token punctuation">.</span>data<span class="token punctuation">.</span>Question</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MockDataSource <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">generateDummyQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">generateQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">generateQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;Android is a great platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token function">Question</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;Android is a bad platform ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">listOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;YES&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;NO&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>QuizRepository.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">package</span> network</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span>sqlDriver<span class="token operator">:</span> SqlDriver<span class="token punctuation">)</span>  <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> mockDataSource <span class="token operator">=</span> <span class="token function">MockDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> coroutineScope <span class="token operator">=</span> <span class="token function">CoroutineScope</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>Main<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> _questionState<span class="token operator">=</span>  <span class="token function">MutableStateFlow</span><span class="token punctuation">(</span>listOf<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> questionState <span class="token operator">=</span> _questionState</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        coroutineScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">            _questionState<span class="token punctuation">.</span><span class="token function">update</span> <span class="token punctuation">{</span></span>
<span class="line">                    mockDataSource<span class="token punctuation">.</span><span class="token function">generateDummyQuestionsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="connect-my-quizz-to-the-internet" tabindex="-1"><a class="header-anchor" href="#connect-my-quizz-to-the-internet"><span>Connect my Quizz to the internet</span></a></h2><p>For now, we will request a simple plain text json file hosted on this repo that will simulate a REST API call to be able to use our Ktor client.</p><p>The request &amp; answers details are specified below :</p><details class="hint-container details"><summary>Request</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">POST</span>
<span class="line">content-type: text/plain  </span>
<span class="line">url: https://github.com/worldline/learning-kotlin-multiplatform/raw/main/quiz.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Answer</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">code:200</span>
<span class="line">body: </span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;questions&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token string">&quot;id&quot;</span>:1, </span>
<span class="line">    <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;You can create an emulator to simulate the configuration of a particular type of Android device using a tool like&quot;</span>, </span>
<span class="line">    <span class="token string">&quot;correct_answer_id&quot;</span>:3, </span>
<span class="line">    <span class="token string">&quot;answers&quot;</span>:<span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:1, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Theme Editor&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:2, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Android SDK Manager&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:3, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;AVD Manager&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:4, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Virtual Editor&quot;</span><span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span>,</span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;id&quot;</span>:2, </span>
<span class="line">    <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;What parameter specifies the Android API level that Gradle should use to compile your app?&quot;</span>, </span>
<span class="line">    <span class="token string">&quot;correct_answer_id&quot;</span>:2, </span>
<span class="line">    <span class="token string">&quot;answers&quot;</span>:<span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:1, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;minSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:2, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;compileSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:3, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;targetSdkVersion&quot;</span><span class="token punctuation">}</span>,</span>
<span class="line">      <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span>:4, <span class="token string">&quot;label&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;testSdkVersion&quot;</span><span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span>,</span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>To not overcomplexify the app, let&#39;s assume that :</p><ul><li>the QuizAPI provided by Ktor (cf below) is our data source</li><li>the repository will use a state flow that emit the API answer once at application startup</li></ul><h3 id="ðŸ§ª-ktor-as-a-multiplatform-http-client" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-ktor-as-a-multiplatform-http-client"><span>ðŸ§ª Ktor as a multiplatform HTTP client</span></a></h3><p>Ktor includes a multiplatform asynchronous HTTP client, which allows you to make requests and handle responses, extend its functionality with plugins, such as authentication and JSON deserialization.</p><h4 id="add-global-dependencies" tabindex="-1"><a class="header-anchor" href="#add-global-dependencies"><span>Add global dependencies</span></a></h4><p>Shared sources need it to use ktor library on your code</p><details class="hint-container details"><summary>build.gradle.kts (module : shared)</summary><p><em>libs.versions.toml</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">ktor <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;2.3.4&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>libraries<span class="token punctuation">]</span></span>
<span class="line">ktor<span class="token operator">-</span>client<span class="token operator">-</span>android <span class="token operator">=</span> <span class="token punctuation">{</span> group <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;io.ktor&quot;</span></span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor-client-android&quot;</span></span><span class="token punctuation">,</span> version<span class="token punctuation">.</span>ref  <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor&quot;</span></span> <span class="token punctuation">}</span></span>
<span class="line">ktor<span class="token operator">-</span>client<span class="token operator">-</span>content<span class="token operator">-</span>negotiation <span class="token operator">=</span> <span class="token punctuation">{</span> group <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;io.ktor&quot;</span></span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor-client-content-negotiation&quot;</span></span><span class="token punctuation">,</span> version<span class="token punctuation">.</span>ref  <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor&quot;</span></span> <span class="token punctuation">}</span></span>
<span class="line">ktor<span class="token operator">-</span>serialization<span class="token operator">-</span>kotlinx<span class="token operator">-</span>json <span class="token operator">=</span> <span class="token punctuation">{</span> group <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;io.ktor&quot;</span></span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor-serialization-kotlinx-json&quot;</span></span><span class="token punctuation">,</span> version<span class="token punctuation">.</span>ref  <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor&quot;</span></span> <span class="token punctuation">}</span></span>
<span class="line">ktor<span class="token operator">-</span>client<span class="token operator">-</span>serialization <span class="token operator">=</span> <span class="token punctuation">{</span> group <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;io.ktor&quot;</span></span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor-client-serialization&quot;</span></span><span class="token punctuation">,</span> version<span class="token punctuation">.</span>ref  <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;ktor&quot;</span></span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p><em>build.gradle.kts (app)</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>android<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>serialization<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>kotlinx<span class="token punctuation">.</span>json<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>ktor<span class="token punctuation">.</span>client<span class="token punctuation">.</span>content<span class="token punctuation">.</span>negotiation<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="enable-internet-permissions" tabindex="-1"><a class="header-anchor" href="#enable-internet-permissions"><span>Enable Internet permissions</span></a></h4><p>You need to enable internet otherwise you will not be able to use ktor client</p><details class="hint-container details"><summary>AndroidManifest.xml</summary><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.INTERNET<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.ACCESS_NETWORK_STATE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="create-the-api-client" tabindex="-1"><a class="header-anchor" href="#create-the-api-client"><span>Create the API client</span></a></h4><details class="hint-container details"><summary>network.QuizApiDatasource.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">package</span> network</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> QuizApiDatasource <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> httpClient <span class="token operator">=</span> HttpClient <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">install</span><span class="token punctuation">(</span>ContentNegotiation<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">json</span><span class="token punctuation">(</span></span>
<span class="line">                contentType <span class="token operator">=</span> ContentType<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Plain<span class="token punctuation">,</span> <span class="token comment">// because Github is not returning an &#39;application/json&#39; header</span></span>
<span class="line">                json <span class="token operator">=</span> Json <span class="token punctuation">{</span></span>
<span class="line">                ignoreUnknownKeys <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">                useAlternativeNames <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">getAllQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Quiz <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> httpClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;https://awl.li/devoxxkmm2023&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="make-all-your-dataclass-become-serializable" tabindex="-1"><a class="header-anchor" href="#make-all-your-dataclass-become-serializable"><span>Make all your dataclass become serializable</span></a></h4><p>Ktor need it to transform the json string into your dataclasses</p><details class="hint-container details"><summary>Quiz.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token label symbol">@kotlinx</span><span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>Serializable</span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Quiz</span><span class="token punctuation">(</span><span class="token keyword">var</span> questions<span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Question.kt (SourceSet : commonMain)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>SerialInfo</span>
<span class="line"><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>SerialName</span>
<span class="line"></span>
<span class="line"><span class="token label symbol">@kotlinx</span><span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>Serializable</span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Question</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span>String<span class="token punctuation">,</span> <span class="token annotation builtin">@SerialName</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;correct_answer_id&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">val</span> correctAnswerId<span class="token operator">:</span>Int<span class="token punctuation">,</span> <span class="token keyword">val</span> answers<span class="token operator">:</span>List<span class="token operator">&lt;</span>Answer<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Answer.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token label symbol">@kotlinx</span><span class="token punctuation">.</span>serialization<span class="token punctuation">.</span>Serializable</span>
<span class="line"><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token keyword">val</span> id<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">val</span> label<span class="token operator">:</span> String <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="create-your-repository-class-in-commonapp" tabindex="-1"><a class="header-anchor" href="#create-your-repository-class-in-commonapp"><span>Create your Repository class in <code>commonApp</code></span></a></h4><details class="hint-container details"><summary>QuizRepository.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> quizApiDatasource <span class="token operator">=</span> <span class="token function">QuizApiDatasource</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> coroutineScope <span class="token operator">=</span> <span class="token function">CoroutineScope</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>IO<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> _questionState<span class="token operator">=</span>  <span class="token function">MutableStateFlow</span><span class="token punctuation">(</span>listOf<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> questionState <span class="token operator">=</span> _questionState</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">fetchQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>Question<span class="token operator">&gt;</span> <span class="token operator">=</span> quizApiDatasource<span class="token punctuation">.</span><span class="token function">getAllQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>questions</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">updateQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        coroutineScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">{</span></span>
<span class="line">            _questionState<span class="token punctuation">.</span><span class="token function">update</span> <span class="token punctuation">{</span> <span class="token function">fetchQuiz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="use-the-repository" tabindex="-1"><a class="header-anchor" href="#use-the-repository"><span>Use the repository</span></a></h4><p>Replace mocked data for questions by the repository flow.</p><details class="hint-container details"><summary>MainActivity.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">val</span> repository <span class="token operator">=</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">enableEdgeToEdge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        setContent <span class="token punctuation">{</span></span>
<span class="line">            QuizAppAndroidTheme <span class="token punctuation">{</span></span>
<span class="line">                 <span class="token keyword">val</span> questions <span class="token operator">=</span> repository<span class="token punctuation">.</span>questionState<span class="token punctuation">.</span><span class="token function">collectAsState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                 <span class="token keyword">if</span><span class="token punctuation">(</span>questions<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">questionScreen</span><span class="token punctuation">(</span>questions<span class="token punctuation">.</span>value<span class="token punctuation">)</span></span>
<span class="line">                 <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="ðŸŽ¯-solutions-1" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions-1"><span>ðŸŽ¯ Solutions</span></a></h3><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>The full sources can be retrieved <a href="#">here</a></p></div><h2 id="image-loading-from-internet" tabindex="-1"><a class="header-anchor" href="#image-loading-from-internet"><span>Image loading from internet</span></a></h2><div class="hint-container warning"><p class="hint-container-title">Under Construction</p></div><p>An that&#39;s it, you quiz have now a remote list of questions. If you want to get navigation between your WelcomeScreen, QuizScreen and ScoreScreen, go to the next section â†’</p><p><strong>âœ… If everything is fine, go to the next chapter â†’</strong></p><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2><ul><li><a href="https://ktor.io/docs/getting-started-ktor-client.html" target="_blank" rel="noopener noreferrer">Ktor client website</a></li><li><a href="https://kotlinlang.org/docs/coroutines-overview.html" target="_blank" rel="noopener noreferrer">Coroutine documentation</a></li><li><a href="https://www.youtube.com/watch?v=-mN3VyJuCjM&amp;list=WL&amp;index=3" target="_blank" rel="noopener noreferrer">REST API basics</a></li></ul>`,54)]))}const d=a(o,[["render",c],["__file","index.html.vue"]]),k=JSON.parse(`{"path":"/network/","title":"Connectivity","lang":"en-US","frontmatter":{"description":"Connectivity Let's connect our Quiz app to internet. ðŸ“š Architecture Architecture basics Everything You NEED to Know About Client Architecture Patterns Data layer for Android Da...","head":[["meta",{"property":"og:url","content":"https://gbrah.github.io/learning-android/learning-android/network/"}],["meta",{"property":"og:title","content":"Connectivity"}],["meta",{"property":"og:description","content":"Connectivity Let's connect our Quiz app to internet. ðŸ“š Architecture Architecture basics Everything You NEED to Know About Client Architecture Patterns Data layer for Android Da..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-03T20:47:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-03T20:47:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Connectivity\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T20:47:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"ðŸ“š Architecture","slug":"ðŸ“š-architecture","link":"#ðŸ“š-architecture","children":[{"level":3,"title":"Data layer for Android","slug":"data-layer-for-android","link":"#data-layer-for-android","children":[]},{"level":3,"title":"Kotlin flow","slug":"kotlin-flow","link":"#kotlin-flow","children":[]},{"level":3,"title":"Coroutine","slug":"coroutine","link":"#coroutine","children":[]},{"level":3,"title":"ðŸ§ª Create your first DataSource and Repository","slug":"ðŸ§ª-create-your-first-datasource-and-repository","link":"#ðŸ§ª-create-your-first-datasource-and-repository","children":[]},{"level":3,"title":"ðŸŽ¯ Solutions","slug":"ðŸŽ¯-solutions","link":"#ðŸŽ¯-solutions","children":[]}]},{"level":2,"title":"Connect my Quizz to the internet","slug":"connect-my-quizz-to-the-internet","link":"#connect-my-quizz-to-the-internet","children":[{"level":3,"title":"ðŸ§ª Ktor as a multiplatform HTTP client","slug":"ðŸ§ª-ktor-as-a-multiplatform-http-client","link":"#ðŸ§ª-ktor-as-a-multiplatform-http-client","children":[]},{"level":3,"title":"ðŸŽ¯ Solutions","slug":"ðŸŽ¯-solutions-1","link":"#ðŸŽ¯-solutions-1","children":[]}]},{"level":2,"title":"Image loading from internet","slug":"image-loading-from-internet","link":"#image-loading-from-internet","children":[]},{"level":2,"title":"ðŸ“– Further reading","slug":"ðŸ“–-further-reading","link":"#ðŸ“–-further-reading","children":[]}],"git":{"updatedTime":1712177232000,"contributors":[{"name":"Ibrahim Gharbi","email":"brah.gharbi@gmail.com","commits":1,"url":"https://github.com/Ibrahim Gharbi"}]},"filePathRelative":"network/README.md","autoDesc":true}`);export{d as comp,k as data};
