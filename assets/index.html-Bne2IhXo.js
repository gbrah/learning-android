import{_ as s,c as a,a as e,o as t}from"./app-V-VRXAwm.js";const p="/learning-android/assets/routes-1QjHpl1Z.png",o={};function i(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="navigation" tabindex="-1"><a class="header-anchor" href="#navigation"><span>Navigation</span></a></h1><h2 id="ðŸ§ª-create-navigation-between-composable-screens" tabindex="-1"><a class="header-anchor" href="#ðŸ§ª-create-navigation-between-composable-screens"><span>ðŸ§ª Create Navigation between composable screens</span></a></h2><p>Android Jetpack navigation enable navigation with navigation host</p><h3 id="add-dependency-to-your-project" tabindex="-1"><a class="header-anchor" href="#add-dependency-to-your-project"><span>Add dependency to your project</span></a></h3><details class="hint-container details"><summary>libs.versions.toml</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">navigation <span class="token operator">=</span> <span class="token string">&quot;2.7.7&quot;</span></span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line">androidx-navigation <span class="token operator">=</span> <span class="token punctuation">{</span> group <span class="token operator">=</span> <span class="token string">&quot;androidx.navigation&quot;</span>, name <span class="token operator">=</span> <span class="token string">&quot;navigation-compose&quot;</span>, version.ref <span class="token operator">=</span> <span class="token string">&quot;navigation&quot;</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>build.gradle.kts (module:app)</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token function">implementation</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>androidx<span class="token punctuation">.</span>navigation<span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="create-your-navigation-host" tabindex="-1"><a class="header-anchor" href="#create-your-navigation-host"><span>Create your navigation host</span></a></h3><p>The navigation host is the configuration class that defines routes of your application.</p><p>Routes are path between all the composable screens that you will call later on your app.</p><p><img src="`+p+`" alt="routes overview"></p><p>For this Hands-on Lab we need 3 routes for :</p><ul><li>At startup to the <code>WelcomeScreen</code></li><li>from Welcome screen to the <code>QuizScreen</code></li><li>from the final question <code>QuizScreen</code>to the <code>ScoreScreen</code></li></ul><details class="hint-container details"><summary>Navhost.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> quizRepository<span class="token operator">:</span> QuizRepository <span class="token comment">// Assuming QuizRepository is defined elsewhere</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation builtin">@Composable</span></span>
<span class="line"> <span class="token keyword">fun</span> <span class="token function">RootNavHost</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> navController <span class="token operator">=</span> <span class="token function">rememberNavController</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    quizRepository <span class="token operator">=</span> <span class="token function">QuizRepository</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token comment">// Initialize quizRepository</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">NavHost</span><span class="token punctuation">(</span>navController<span class="token punctuation">,</span> startDestination <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;welcome&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">composable</span><span class="token punctuation">(</span></span>
<span class="line">            route <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;welcome&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token comment">// arguments = emptyList() // If there are no arguments</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">WelcomeScreen</span><span class="token punctuation">(</span>navController<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">composable</span><span class="token punctuation">(</span></span>
<span class="line">            route <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;quiz&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> questions <span class="token operator">=</span> quizRepository<span class="token punctuation">.</span>questionState<span class="token punctuation">.</span><span class="token function">collectAsState</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>questions<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">QuestionScreen</span><span class="token punctuation">(</span>navController<span class="token punctuation">,</span>questions<span class="token punctuation">.</span>value<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">composable</span><span class="token punctuation">(</span></span>
<span class="line">            route <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;score/{score}&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            arguments <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">navArgument</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;score&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> type <span class="token operator">=</span> NavType<span class="token punctuation">.</span>StringType <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span> backStackEntry <span class="token operator">-&gt;</span></span>
<span class="line">            <span class="token keyword">val</span> score <span class="token operator">=</span> backStackEntry<span class="token punctuation">.</span>arguments<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;score&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            score<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span> <span class="token function">ScoreScreen</span><span class="token punctuation">(</span>navController<span class="token punctuation">,</span>it<span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>As you can see all composables now take as parameter a navigation controller. It will be needed to navigate with routes between screens.</p><p>for example, the <code>WelcomeScreen</code> composable is now declared as follows :</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token annotation builtin">@Composable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"> <span class="token keyword">fun</span> <span class="token function">welcomeScreen</span><span class="token punctuation">(</span>navController<span class="token operator">:</span> NavController<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="use-the-navigation-host" tabindex="-1"><a class="header-anchor" href="#use-the-navigation-host"><span>Use the navigation host</span></a></h3><h4 id="instantiate-the-navhost-on-the-app-main-composable" tabindex="-1"><a class="header-anchor" href="#instantiate-the-navhost-on-the-app-main-composable"><span>instantiate the navHost on the App main composable.</span></a></h4><details class="hint-container details"><summary>MainActivity.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">enableEdgeToEdge</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        setContent <span class="token punctuation">{</span></span>
<span class="line">            QuizAppAndroidTheme <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> navController <span class="token operator">=</span> <span class="token function">rememberNavController</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">RootNavHost</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>Because the <code>WelcomeScreen</code> was set as initialRoute, it will start correctly the quizz</p><h4 id="use-the-navigationcontrolleron-screen-buttons-click" tabindex="-1"><a class="header-anchor" href="#use-the-navigationcontrolleron-screen-buttons-click"><span>Use the <code>navigationController</code>on screen buttons click</span></a></h4><details class="hint-container details"><summary>WelcomeScreen.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    onClick <span class="token operator">=</span> <span class="token punctuation">{</span> navController<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;quiz&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Start the Quizz&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>QuestionScreen.kt</em></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>bottom <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>selectedAnswer <span class="token operator">==</span> questions<span class="token punctuation">[</span>questionProgress<span class="token punctuation">]</span><span class="token punctuation">.</span>correctAnswerId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            score<span class="token operator">++</span> <span class="token comment">// Increment the score when answer is correct</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>questionProgress <span class="token operator">&lt;</span> questions<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            questionProgress<span class="token operator">++</span> <span class="token comment">// Case 1 : Still some questions</span></span>
<span class="line">            selectedAnswer <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// -&gt; recompose QuizQuestion</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Case 2 : no more questions</span></span>
<span class="line">            <span class="token comment">// -&gt; navigate to score screen</span></span>
<span class="line">            navigator<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;score/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">score</span></span><span class="token string"> out of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">questions<span class="token punctuation">.</span>size</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>ScoreScreen.kt</summary><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token function">Button</span><span class="token punctuation">(</span></span>
<span class="line">    modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>all <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    onClick <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        navigator<span class="token punctuation">.</span><span class="token function">navigate</span><span class="token punctuation">(</span>route <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;quiz&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>Filled<span class="token punctuation">.</span>Refresh<span class="token punctuation">,</span> contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Localized description&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Retake the Quizz&quot;</span></span><span class="token punctuation">,</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="ðŸŽ¯-solutions" tabindex="-1"><a class="header-anchor" href="#ðŸŽ¯-solutions"><span>ðŸŽ¯ Solutions</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>The full sources can be retrieved <a href="#">here</a></p></div><p><strong>âœ… If everything is fine, congrats, you&#39;ve just finish this codelab. You can now experiment your kotlin skills eveywhere !</strong></p><h2 id="ðŸ“–-further-reading" tabindex="-1"><a class="header-anchor" href="#ðŸ“–-further-reading"><span>ðŸ“– Further reading</span></a></h2><ul><li><a href="https://storage.googleapis.com/android-stories/compose/Compose_Animation_Cheat_Sheet.pdf" target="_blank" rel="noopener noreferrer">Animation in compose cheat sheet</a></li><li><a href="https://google.github.io/accompanist/" target="_blank" rel="noopener noreferrer">The accompagnist : a group of libraries that aim to supplement Compose</a></li></ul>`,26)]))}const r=s(o,[["render",i],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/navigation/","title":"Navigation","lang":"en-US","frontmatter":{"description":"Navigation ðŸ§ª Create Navigation between composable screens Android Jetpack navigation enable navigation with navigation host Add dependency to your project libs.versions.toml bu...","head":[["meta",{"property":"og:url","content":"https://gbrah.github.io/learning-android/learning-android/navigation/"}],["meta",{"property":"og:title","content":"Navigation"}],["meta",{"property":"og:description","content":"Navigation ðŸ§ª Create Navigation between composable screens Android Jetpack navigation enable navigation with navigation host Add dependency to your project libs.versions.toml bu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-03T20:47:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-03T20:47:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Navigation\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T20:47:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"ðŸ§ª Create Navigation between composable screens","slug":"ðŸ§ª-create-navigation-between-composable-screens","link":"#ðŸ§ª-create-navigation-between-composable-screens","children":[{"level":3,"title":"Add  dependency to your project","slug":"add-dependency-to-your-project","link":"#add-dependency-to-your-project","children":[]},{"level":3,"title":"Create your navigation host","slug":"create-your-navigation-host","link":"#create-your-navigation-host","children":[]},{"level":3,"title":"Use the navigation host","slug":"use-the-navigation-host","link":"#use-the-navigation-host","children":[]}]},{"level":2,"title":"ðŸŽ¯ Solutions","slug":"ðŸŽ¯-solutions","link":"#ðŸŽ¯-solutions","children":[]},{"level":2,"title":"ðŸ“– Further reading","slug":"ðŸ“–-further-reading","link":"#ðŸ“–-further-reading","children":[]}],"git":{"updatedTime":1712177232000,"contributors":[{"name":"Ibrahim Gharbi","email":"brah.gharbi@gmail.com","commits":1,"url":"https://github.com/Ibrahim Gharbi"}]},"filePathRelative":"navigation/README.md","autoDesc":true}');export{r as comp,u as data};
